name: Deploy slmm
on:
  push:
    branches: [main, stable, prod]

  workflow_dispatch:
    inputs:
      environment:
        description: Environment
        type: choice
        required: true
        default: dev
        options:
          - dev
          - prod
          - stage
jobs:
  git-push-ssh:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v4
        with:
         fetch-depth: 0

      - name: Limpa diretorio de test
        run: |
         ls -la
         rm -rf test   

      - name: Configurar SSH e executar push com debug
        run: |
          echo "üîê Configurando chave SSH..."
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          eval "$(ssh-agent -s)"
          printf '%s\n' "$SSH_PASSPHRASE" | ssh-add ~/.ssh/id_rsa

          ssh-keyscan -H sergi3607.c35.integrator.host >> ~/.ssh/known_hosts

          echo "‚öôÔ∏è Configurando Git"
          git config --global user.email "sergio.marques@puc-campinas.edu.br"
          git config --global user.name "SLMM"
          git branch -m main master
          git remote set-url origin ssh://sergi3607@sergi3607.c35.integrator.host/home/sergi3607/applications/repositories/api102/.git || echo "origin j√° existe"

          echo "üöÄ PUSH com debug SSH"
          git push -u origin master  
          echo "üîç Confirmando o commit remoto:"
          ssh sergi3607@sergi3607.c35.integrator.host "
            cd /home/sergi3607/applications/repositories/api102/.git &&
            echo 'üìå √öltimo commit no reposit√≥rio remoto:' &&
            git log --oneline -n 1
          "
          ls -la  
         # GIT_SSH_COMMAND="ssh -vvv" git push -u origin master
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PASSPHRASE: ${{ secrets.SSH_PASSPHRASE }}

        
       
