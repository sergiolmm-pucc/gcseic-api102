name: Deploy slmm
on:
  push:
    branches: [main, stable, prod]

  workflow_dispatch:
    inputs:
      environment:
        description: Environment
        type: choice
        required: true
        default: dev
        options:
          - dev
          - prod
          - stage
jobs:

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
    
      - name: Setup SSH key with passphrase
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
           eval "$(ssh-agent -s)"
          # Use ssh-add with passphrase via here-string input:
          printf '%s\n' "$SSH_PASSPHRASE" | ssh-add ~/.ssh/id_rsa
          ssh-keyscan -H sergi3607.c35.integrator.host >> ~/.ssh/known_hosts
          ssh -v sergi3607@sergi3607.c35.integrator.host
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PASSPHRASE: ${{ secrets.SSH_PASSPHRASE }}

      - name: Configurar Git
        run: |
          git config --global user.email "sergio.marques@puc-campinas.edu.br"
          git config --global user.name "SLMM"



      - name: Verificar conexão e estrutura no host remoto
        run: |
          ssh sergi3607@sergi3607.c35.integrator.host "test -d /home/sergi3607/applications/repositories/api102/.git || (echo '❌ Repositório não encontrado!' && exit 1)"
        continue-on-error: false

      - name: Alterar URL remota para push via SSH
        run: git remote set-url origin sergi3607@sergi3607.c35.integrator.host:/home/sergi3607/applications/repositories/api102/.git

      - name: Push para servidor remoto
        run: git push origin main

          
    #  - name: Change Owner e email
    #    run: |
  
 #         git remote set-url origin ssh://sergi3607@sergi3607.c35.integrator.host/home/sergi3607/applications/repositories/api102/.git
 #         git push origin main
 #         printf '%s\n' "$SSH_PASSPHRASE" 
       
  #      env:
   #       SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
    #      SSH_PASSPHRASE: ${{ secrets.SSH_PASSPHRASE }}   
        
       
