{
  "openapi": "3.0.0",
  "info": {
    "title": "API Exemplo com Swagger",
    "version": "1.0.0",
    "description": "API para retornar data/hora e concatenar valores"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "default",
      "description": "Operações básicas"
    },
    {
      "name": "Impostos",
      "description": "Operações relacionadas a cálculos de impostos"
    }
  ],
  "paths": {
    "/datetime": {
      "get": {
        "summary": "Retorna data e hora do servidor",
        "responses": {
          "200": {
            "description": "Data e hora atual",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "datetime": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/concat": {
      "post": {
        "tags": ["default"],
        "summary": "Concatena valor com frase fixa",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string"
                  }
                },
                "required": ["value"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resultado da concatenação",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "result": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro - valor não fornecido"
          }
        }
      }
    },
    "/imposto/calculo-icms": {
      "get": {
        "tags": ["Impostos"],
        "summary": "Calcula o valor do ICMS",
        "parameters": [
          {
            "name": "valor_produto",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "aliquota_icms",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna os dados do ICMS calculado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "valor_produto": { "type": "number" },
                    "aliquota_icms": { "type": "number" },
                    "valor_icms": { "type": "number" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro - parâmetros inválidos ou ausentes"
          }
        }
      }
    },
    "/imposto/calculo-ipi": {
      "get": {
        "tags": ["Impostos"],
        "summary": "Calcula o valor do IPI",
        "description": "Calcula o valor total do IPI com base no valor do produto, alíquota e quantidade",
        "parameters": [
          {
            "name": "valor_produto",
            "in": "query",
            "description": "Valor unitário do produto",
            "required": true,
            "schema": {
              "type": "number"
            },
            "example": 100.50
          },
          {
            "name": "aliquota_ipi",
            "in": "query",
            "description": "Alíquota do IPI em porcentagem",
            "required": true,
            "schema": {
              "type": "number"
            },
            "example": 10.5
          },
          {
            "name": "quantidade",
            "in": "query",
            "description": "Quantidade de produtos",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "example": 5
          }
        ],
        "responses": {
          "200": {
            "description": "Cálculo realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "valor_produto": {
                      "type": "number",
                      "description": "Valor unitário do produto",
                      "example": 100.50
                    },
                    "aliquota_ipi": {
                      "type": "number",
                      "description": "Alíquota do IPI em porcentagem",
                      "example": 10.5
                    },
                    "quantidade": {
                      "type": "integer",
                      "description": "Quantidade de produtos",
                      "example": 5
                    },
                    "valor_ipi_total": {
                      "type": "number",
                      "description": "Valor total do IPI calculado",
                      "example": 52.76
                    }
                  },
                  "success": {
                    "type": "boolean"
                  },
                  "result": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro - valor não fornecido"
          }
        }
      }
    },
    "/calcular-custo-casa-container": {
      "post": {
        "tags": ["CI_CD7"],
        "summary": "Calcula o custo total de uma casa container",
        "description": "Calcula o custo total de uma casa container com base nos parâmetros fornecidos",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "containers": {
                    "type": "integer",
                    "description": "Número de containers",
                    "example": 2
                  },
                  "container_size": {
                    "type": "string",
                    "description": "Tamanho do container",
                    "enum": ["20ft", "40ft"],
                    "example": "40ft"
                  },
                  "finish_level": {
                    "type": "string",
                    "description": "Nível de acabamento",
                    "enum": ["basico", "intermediario", "luxo"],
                    "example": "intermediario"
                  },
                  "foundation_type": {
                    "type": "string",
                    "description": "Tipo de fundação",
                    "enum": ["sapata", "radier", "pilotis"],
                    "example": "radier"
                  },
                  "insulation": {
                    "type": "string",
                    "description": "Tipo de isolamento",
                    "enum": ["nenhum", "poliuretano", "lã de rocha"],
                    "example": "poliuretano"
                  },
                  "electricity": {
                    "type": "boolean",
                    "description": "Inclui instalação elétrica",
                    "example": true
                  },
                  "plumbing": {
                    "type": "boolean",
                    "description": "Inclui instalação hidráulica",
                    "example": true
                  },
                  "solar_energy": {
                    "type": "boolean",
                    "description": "Inclui energia solar",
                    "example": false
                  },
                  "windows": {
                    "type": "integer",
                    "description": "Número de janelas",
                    "example": 4
                  },
                  "doors": {
                    "type": "integer",
                    "description": "Número de portas",
                    "example": 3
                  },
                  "custom_furniture": {
                    "type": "boolean",
                    "description": "Inclui móveis personalizados",
                    "example": true
                  },
                  "project_ready": {
                    "type": "boolean",
                    "description": "Projeto pronto (se false, adiciona custo de design)",
                    "example": false
                  },
                  "distance": {
                    "type": "integer",
                    "description": "Distância para entrega em km",
                    "example": 50
                  },
                  "rooms": {
                    "type": "integer",
                    "description": "Número de cômodos",
                    "example": 3
                  }
                },
                "required": ["containers", "container_size", "finish_level", "foundation_type", "insulation"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cálculo do custo total realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "custoTotal": {
                      "type": "number",
                      "description": "Custo total calculado para a casa container",
                      "example": 185750
                    }
                  }
                },
                "examples": {
                  "casaBasica": {
                    "value": {
                      "custoTotal": 63000
                    },
                    "summary": "Casa básica com 1 container"
                  },
                  "casaIntermediaria": {
                    "value": {
                      "custoTotal": 185750
                    },
                    "summary": "Casa intermediária com 2 containers"
                  },
                  "casaLuxo": {
                    "value": {
                      "custoTotal": 283000
                    },
                    "summary": "Casa de luxo com 3 containers"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Parâmetros inválidos ou ausentes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Mensagem de erro",
                      "example": "Parâmetros inválidos"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/gf/calcular-financas": {
      "post": {
        "tags": ["Gestor de Finanças"],
        "summary": "Calcula os valores financeiros do Gestor de Finanças",
        "description": "Recebe salário bruto, lista de gastos fixos, percentuais para investimento e lazer e retorna os cálculos de INSS, IRPF, salário líquido e saldo final.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "salarioBruto": {
                    "type": "number",
                    "example": 10000
                  },
                  "gastosFixos": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "nome": {
                          "type": "string",
                          "example": "Aluguel"
                        },
                        "valor": {
                          "type": "number",
                          "example": 1200
                        }
                      },
                      "required": ["nome", "valor"]
                    }
                  },
                  "percentualInvestimento": {
                    "type": "number",
                    "example": 15
                  },
                  "percentualLazer": {
                    "type": "number",
                    "example": 20
                  }
                },
                "required": ["salarioBruto", "gastosFixos", "percentualInvestimento", "percentualLazer"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cálculos financeiros retornados com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "inss": {
                      "type": "number",
                      "example": 828.38
                    },
                    "irpf": {
                      "type": "number",
                      "example": 1246.80
                    },
                    "gastosTotais": {
                      "type": "number",
                      "example": 1600
                    },
                    "salarioLiquido": {
                      "type": "number",
                      "example": 6324.82
                    },
                    "valorInvestimento": {
                      "type": "number",
                      "example": 948.72
                    },
                    "valorLazer": {
                      "type": "number",
                      "example": 1264.96
                    },
                    "saldoFinal": {
                      "type": "number",
                      "example": 4111.14
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro na requisição, dados inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "erro": {
                      "type": "string",
                      "example": "Salário bruto inválido ou ausente."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/loginFixoEquipeTres/loginFixoEquipeTres": {
      "post": {
        "tags": ["Login Fixo Equipe 3"],
        "summary": "Valida usuário e senha fixos da equipe três",
        "description": "Recebe username e password e retorna sucesso ou erro de autenticação",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string", "example": "admin" },
                  "password": { "type": "string", "example": "admin123" }
                },
                "required": ["username", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login bem-sucedido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "success": true,
                  "message": "Login efetuado com sucesso"
                }
              }
            }
          },
          "401": {
            "description": "Falha na autenticação",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Usuário ou senha incorretos"
                }
              }
            }
          }
        }
      }
    }
  }
}
